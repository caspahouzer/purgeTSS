#!/usr/bin/env node

const chalk = require('chalk');
const program = require('caporal');
const purgetss = require('../index.js');
const package = require('../package.json');

program
	.version(package.version)
	.description(package.description + '\n\nPlease visit ' + chalk.yellow('https://github.com/macCesar/purgeTSS') + ' for details.')
	.help('purgeTSS will create a clean app.tss file by copying only the classes used in your views.\n\nIt works with tailwind.tss, fontawesome.tss, materialicons.tss and lineicons.tss.\n\nALL your custom classes from your app.tss file will be copied over without purging.')
	.action((args, options, logger) => {
		purgetss.purgeClasses(options);
	});

program
	.command('dev-mode')
	.description('To copy every single style from tailwind.tss, fontawesome.tss, materialicons.tss and lineicons.tss into app.tss')
	.help('Use this command if you want to copy all available styles from tailwind.tss, fontawesome.tss, materialicons.tss, and lineicons.tss into app.tss while prototyping your App.')
	.option('-f, --files <arguments>', 'Use any of the following arguments to copy styles from specific providers:\n   tw = Tailwind styles\n   fa = Font Awesome styles\n   md = Material Design styles\n   li = LineIcons styles')
	.action((args, options, logger) => {
		purgetss.devMode(options);
	});

program
	.command('copy-fonts')
	.description('Copy Font Awesome icons, Material Design Icons and LineIcons Fonts')
	.help('Command to copy the Free versions of:\n\n   • Font Awesome Icons ( Brands, Regular, Solid )\n   • Material Design Icons\n   • LineIcons\n\nInto your projects’s app/assets/fonts/ folder.\n\nWith their names fixed to work with your app whether it is for iOS or for Android.')
	.option('-f, --files <arguments>', 'Use any of the following arguments to copy fonts from specific providers:\n   fa = Font Awesome Icons\n   md = Material Design Icons\n   li = LineIcons')
	.action((args, options, logger) => {
		purgetss.copyFonts(options);
	});

program
	.command('auto-update')
	.description('Update purgeTSS to the latest version')
	.help('Run auto-update regularly!\n\nWe constantly update purgeTSS for bug fixes, to add new features and to include the latest versions of Tailwind and all other resources like fonts.')
	.action((args, options, logger) => {
		logger.info(`${purgetss.colores.purgeLabel} Updating purgeTSS to the latest version...`);

		const { exec } = require("child_process");

		exec("npm update -g purgetss", (error, stdout, stderr) => {
			if (error) {
				logger.info(`${purgetss.colores.purgeLabel} error: ${error.message}`);
				return;
			}

			if (stderr) {
				logger.info(`${purgetss.colores.purgeLabel} stderr: ${stderr}`);
				return;
			}

			logger.info(`${purgetss.colores.purgeLabel} Done!`);
		});
	});

program
	.parse(process.argv);
