#!/usr/bin/env node

const chalk = require('chalk');
const program = require('caporal');
const purgetss = require('../index.js');
const package = require('../package.json');

program
	.version(package.version)
	.description(package.description + '\n\nPlease visit ' + chalk.yellow('https://github.com/macCesar/purgeTSS') + ' for details.')
	.help('purgeTSS will create a clean app.tss file by copying only the classes used in your XML Files.\n\nIt works with tailwind.tss, fontawesome.tss, materialicons.tss, lineicons.tss and your custom.tss file.\n\nALL your classes from your original app.tss file will be copied over without purging.\n\nYou can create your own custom classes and values by running `purgetss init` and `purgetss build-custom`.')
	.action((args, options, logger) => {
		purgetss.purgeClasses(options);
	});

program
	.command('init')
	.alias('i')
	.description('Create a purgeTSS config file for your project')
	.help('It will create a minimal config.js file inside the purgetss folder at the root of your project.')
	.action((args, options, logger) => {
		purgetss.init();
	});

program
	.command('build-custom')
	.alias('b')
	.description('Generate your custom.tss file')
	.help('It will generate a new `custom.tss` file based on the attributes defined in `./purgetss/config.js`.')
	.action((args, options, logger) => {
		purgetss.buildCustom();
	});

program
	.command('dev-mode')
	.alias('d')
	.description('Copy all available classes into app.tss')
	.help('Use this command if you want to copy all available styles from tailwind.tss, fontawesome.tss, materialicons.tss, lineicons.tss and custom.tss files into app.tss while prototyping your App.')
	.option('-f, --files <arguments>', 'Use any of the following arguments to copy styles from a specific provider:\n   tw = Tailwind styles\n   fa = Font Awesome styles\n   md = Material Design styles\n   li = LineIcons styles\n   custom = custom.tss styles')
	.action((args, options, logger) => {
		purgetss.devMode(options);
	});

program
	.command('copy-fonts')
	.alias('c')
	.description('Copy Font Awesome icons, Material Design Icons and LineIcons Fonts into your project')
	.help('Command to copy the Free versions of:\n\n   • Font Awesome Icons ( Brands, Regular, Solid )\n   • Material Design Icons\n   • LineIcons\n\nInto your projects’s app/assets/fonts/ folder.\n\nWith their names fixed to work with your app whether it is for iOS or for Android.')
	.option('-f, --files <arguments>', 'Use any of the following arguments to copy fonts from a specific provider:\n   fa = Font Awesome Icons\n   md = Material Design Icons\n   li = LineIcons')
	.action((args, options, logger) => {
		purgetss.copyFonts(options);
	});

program
	.command('auto-update')
	.alias('a')
	.description('Update purgeTSS to the latest version')
	.help('Run auto-update regularly!\n\nWe constantly update purgeTSS to add new features, to include the latest versions of Tailwind and to fix bugs.')
	.action((args, options, logger) => {
		logger.info(`${purgetss.colores.purgeLabel} Updating purgeTSS to the latest version...`);

		const { exec } = require("child_process");

		exec("npm update -g purgetss", (error, stdout, stderr) => {
			if (error) {
				logger.info(`${purgetss.colores.purgeLabel} error: ${error.message}`);
				return;
			}

			if (stderr) {
				logger.info(`${purgetss.colores.purgeLabel} stderr: ${stderr}`);
				return;
			}

			logger.info(`${purgetss.colores.purgeLabel} Done!`);
		});
	});

program
	.parse(process.argv);
