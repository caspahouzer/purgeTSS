#!/usr/bin/env node

const chalk = require('chalk');
const program = require('commander');
const purgetss = require('../index.js');
const package = require('../package.json');

program
	.version(chalk.hex(purgetss.colores.verdeOscuro)(package.version), '-v, --version', chalk.hex(purgetss.colores.verdeOscuro)('Output the current version'))
	.description(chalk.hex(purgetss.colores.verdeOscuro)(package.description))
	.action(() => {
		if (program.vendor) {
			purgetss.copyFontsFolder();
		}

		purgetss.purgeClasses(program.opts());
	});

program
	.command('fonts')
	.description(chalk.hex(purgetss.colores.verdeOscuro)('To copy Font Awesome’s fonts into your project’s app/assets/fonts/ folder.'))
	.action(() => purgetss.copyFontsFolder());

program
	.command('auto-update')
	.description(chalk.hex(purgetss.colores.verdeOscuro)('Update purgeTSS to the latest version.'))
	.action(() => {
		console.log(`${purgetss.colores.purgeLabel} Updating purgeTSS to the latest version...`);
		const { exec } = require("child_process");
		exec("npm update -g purgetss", (error, stdout, stderr) => {
			if (error) {
				console.log(`${purgetss.colores.purgeLabel} error: ${error.message}`);
				return;
			}

			if (stderr) {
				console.log(`${purgetss.colores.purgeLabel} stderr: ${stderr}`);
				return;
			}

			console.log(`${purgetss.colores.purgeLabel} Done Updating!`);
		});
	});

program
	.option('-d, --dev', chalk.hex(purgetss.colores.verdeOscuro)('To copy all available classes from tailwind.tss and fontawesome.tss files while prototyping your App.'))
	.parse(process.argv);
